stages:
  - container-build
  - merge

# This defines the images to build
.matrix: &matrix
  # - IMAGE_TAG: "1.21.5"
  #   PAPER_URL: "https://api.papermc.io/v2/projects/paper/versions/1.21.5/builds/40/downloads/paper-1.21.5-40.jar"
  #   OPENJDK_VERSION: 24
  - IMAGE_TAG: "1.21.8"
    PAPER_URL: "https://fill-data.papermc.io/v1/objects/ce69baec74a05c27e67c0c89346b1ff056bec6140cf8add46f0a6f64cf759c3f/paper-1.21.8-32.jar"
    OPENJDK_VERSION: 24
  - IMAGE_TAG: "1.20.5"
    PAPER_URL: "https://api.papermc.io/v2/projects/paper/versions/1.20.6/builds/151/downloads/paper-1.20.6-151.jar"
    OPENJDK_VERSION: 24
  - IMAGE_TAG: "1.19.4"
    PAPER_URL: "https://api.papermc.io/v2/projects/paper/versions/1.19.4/builds/550/downloads/paper-1.19.4-550.jar"
    OPENJDK_VERSION: 24
  - IMAGE_TAG: "1.18.2"
    PAPER_URL: "https://api.papermc.io/v2/projects/paper/versions/1.18.2/builds/388/downloads/paper-1.18.2-388.jar"
    OPENJDK_VERSION: 24
  - IMAGE_TAG: "1.17.1"
    PAPER_URL: "https://api.papermc.io/v2/projects/paper/versions/1.17.1/builds/411/downloads/paper-1.17.1-411.jar"
    OPENJDK_VERSION: 16
  - IMAGE_TAG: "1.16.5"
    PAPER_URL: "https://api.papermc.io/v2/projects/paper/versions/1.16.5/builds/794/downloads/paper-1.16.5-794.jar"
    OPENJDK_VERSION: 16

build-container-arm64:
  stage: container-build
  variables:
    ARCH: arm64
  parallel:
    matrix: *matrix
  tags:
    -  saas-linux-small-${ARCH}
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # build the container image for the current arch using kaniko
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --cache=true
      --cache-repo "${CI_REGISTRY_IMAGE}/buildcache"
      --build-arg "PAPER_URL=${PAPER_URL}"
      --build-arg "OPENJDK_VERSION=${OPENJDK_VERSION}"
      --dockerfile "${CI_PROJECT_DIR}/build/Containerfile"
      --destination "${CI_REGISTRY_IMAGE}/build:${ARCH}-${IMAGE_TAG}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"

build-container-amd64:
  stage: container-build
  variables:
    ARCH: amd64
  parallel:
    matrix: *matrix
  tags:
    -  saas-linux-small-${ARCH}
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # build the container image for the current arch using kaniko
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --cache=true
      --cache-repo "${CI_REGISTRY_IMAGE}/buildcache"
      --build-arg "PAPER_URL=${PAPER_URL}"
      --build-arg "OPENJDK_VERSION=${OPENJDK_VERSION}"
      --dockerfile "${CI_PROJECT_DIR}/build/Containerfile"
      --destination "${CI_REGISTRY_IMAGE}/build:${ARCH}-${IMAGE_TAG}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"

# define a job for creating and pushing a merged manifest
merge-manifests:
  stage: merge
  parallel:
    matrix: *matrix
  image:
    name: mplatform/manifest-tool:alpine
    entrypoint: [""]
  variables:
    DOCKER_AUTH: "${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}"
  script:
    - mkdir -p ~/.docker
    - |
      echo "{\"auths\": {\"$CI_REGISTRY\": {\"auth\": \"$(echo -n $DOCKER_AUTH | base64)\"}}}" > ~/.docker/config.json
    - >-
      manifest-tool push from-args
      --platforms linux/amd64,linux/arm64
      --template ${CI_REGISTRY_IMAGE}/build:ARCH-${IMAGE_TAG}
      --target ${CI_REGISTRY_IMAGE}/paper
      --tags ${IMAGE_TAG}
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
